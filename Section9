ADVANCED FEATURES, PAYMENTS, EMAIL, FILE UPLOADS:
LECTURE 1;
IMAGE UPLOADS USING MULTER USERS:
---implementing image uploads for image photos
--multer is used to handle multi-part form data wch is a form in coding
tht is used to upload files from a form
--multer is a middleware for multi-part form data.
--we will allow the user to  upload a photo on the Update Me route and instead ofjst being  able to update email and photo
install package

**********************npm i multer********************

--in postman to update the photo, we use the form data
--foe photo,we specify the file

LECTURE 2:
CONFIGURING MULTER:
--giving images a better file name and allowing only image files to be uploaded onto the server.
--we will create one multer storage and one multer filter wch we will use to create upload


LECTURE 3:
Saving Image Name to Database:
---saving the image name to the database in filteredBody

--what happens when we create a new user, they will not have a photo at the beginning
--we use a default image

LECTURE 4:
Resizing Images:
--we will practice image processing and manipulation with Node
--how do we resize and convert our images
--assuming the images are super large and not square,
--we need to resize the images and make them square.
--we perform this in the updateMe middleware
--we will use the sharp package

******************npm i sharp************
--this is an image processing library best for image resizing

LECTURE 5:
Adding Image Uploads to form:
--Allowing users to upload phots ryt on our website

LECTURE 6:
Uploading multer Images Tour::
--how to upload multiple files at the sametime and process multiple images
at the same time
--uploading and processing tour pictures
--we will have imgeCover and images for tourModel

LECTURE 7:
Processing Multiple Images:
--processing all the images

LECTURE 8:
Building acomplex Email Handler:
--sending emails
--we will build email templates with pug and send emails  with the sendGrid service
--we will install a package to strip out all the html and leave only text

**********npm i html-to-text***************

LECTURE 9:
Email Templates with Pug welcome Emails::
--sending a welcome template with pug

LECTURE 10:
Sending Password reset Emails:
--set emails for Password reset

LECTURE 11:
Using sendgrid for real emails:
--we search the sendgrid on google and create an account
--click the setup guide
-we create an API key with aname
--we get a username and password
--we place it in config

--we used mail Sac to generate email_from

LECTURE 12:
Credit Card Payment with stripe:
--how to accept credit card inorder for users to buy tours

--stripe workflow
***BACKEND__route to implement stripe chekout session wch contains tour price, name
        |
        v
***FRONT END --request cheeckout session
            |
            v
--change credit-card using session

**BACKEND
--use stripe webhook to create new bookings


