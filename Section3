USING MONGODB WITH MONGOOSE
LECTURE 1:
Connecting our database the express
-to access our mongodb database, we need a mongodb driver
-we will use mongoose

************npm install mongoose********

--incase the remote db fails, try changing the ip address connection
-env file works fine

--move to collection in mongodb atlas, create a new cluster collection

--on connect to cluster, click connect your application and get your connection string
-we connect to natours database in cluster 0
-we also create a variable for connection to local database

--this connects to the remote server
-we can now delete the tours collection to avoid inteference

LECTURE 2:
What is mongoose:
this is an object data modeling library for mongodb and nodejs providing a higher level of abstraction
-mongoose gives us alot of functionality outside the box wch is necessary for fasterdevelopment
-it provides us with a schema to model data and relationships easy validtaion, simple query API, middleware
-mongoose schema: where we model our data by describing the structure of data, default values and validation
-mongoose model:a wrapper for schema, providing an interface to the database for CRUD operations

LECTURE 3:
Creating a simple tour model:
-creating a simple schema for our app in server
-model is a blueprint to create classes
-we use a mongoose model to perform a CRUD operation

LECTURE 4:
Creating Document and testing the Model:
-we create a document and we test whether it works using both the remote and the local database

LECTURE 5:
Intro intii Back end Architecture MVC, logic,and more
-how do we design our code Architecture

MODEL(Business Loic)  ----------> VIEW(presentational Logic) -----------
 |                                  |
--------------CONTROLLER (Application)<----------    

CONTROLLER: this handles app req, interact with models and send back data

VIEW: this is useful for GUI app
-this handles templates we wll use


APPLICATION LOGIC                   VS        BUSINESS LOGIC
-code concerned abt                            -sloves business problems
implementing                                    -invloved in creating new tours, users
-manage requests and responses                  -validating user input
-more technical aspects                         -checking if password is correct
-bridge btn mooal and view layers

LECTURE 6:
Refactoring for MVC
-we create a model folder

LECTURE 7:
ANOTHER WAY OF CREATING DOCUMENTS
-we will create abetter way of building API using database
-we start with the createtour function
-we define the engine in package.json to determine the version of node we are using


--with mongodb, everything that is not in our database schema like difficluty
is jst ignored instead of creating an error

--if we send it again in postman, it gives us an error

LECTURE 8:
READING DOCUMENTS
-tour.findbyId -- is used to find a particualr item by id

LECTURE 9:
Updating DOCUMENTS
-we can check on the mongodb query to see how we implement them in the documentation
-we have options ie new, upsert, runvalidators

-we have many methods in mongoose

LECTURE 10:
Deleting DOCUMENTS
-performed the delete operation 


LECTURE 11:
Modelling the tour
-we model the tours to make it more complete



